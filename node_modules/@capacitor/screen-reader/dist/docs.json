{
  "api": {
    "name": "ScreenReaderPlugin",
    "slug": "screenreaderplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "isEnabled",
        "signature": "() => Promise<{ value: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ value: boolean; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Whether a Screen Reader is currently active.\n\nThis method is not supported on web (it is not possible to detect Screen\nReaders).",
        "complexTypes": [],
        "slug": "isenabled"
      },
      {
        "name": "speak",
        "signature": "(options: SpeakOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "SpeakOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Text-to-Speech functionality.\n\nThis function will only work if a Screen Reader is currently active.\n\nOn web, browsers must support the [SpeechSynthesis\nAPI](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis), or\nthis method will throw an error.\n\nFor more text-to-speech capabilities, please see the [Capacitor Community\nText-to-Speech\nplugin](https://github.com/capacitor-community/text-to-speech).",
        "complexTypes": [
          "SpeakOptions"
        ],
        "slug": "speak"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'stateChange', listener: StateChangeListener) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'stateChange'"
          },
          {
            "name": "listener",
            "docs": "",
            "type": "StateChangeListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Add a listener for when the screen reader is turned on or off.\n\nThis event used to be named `'accessibilityScreenReaderStateChange'`.\n\nThis method is not supported on web (it is not possible to detect Screen\nReaders).",
        "complexTypes": [
          "PluginListenerHandle",
          "StateChangeListener"
        ],
        "slug": "addlistenerstatechange"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Remove all the listeners that are attached to this plugin.",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "SpeakOptions",
      "slug": "speakoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "value",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The text to speak.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "language",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The language to speak the text in, as its [ISO 639-1\nCode](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g.: \"en\").\n\nThis option is only supported on Android.",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    },
    {
      "name": "ScreenReaderState",
      "slug": "screenreaderstate",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "value",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "Whether a Screen Reader is currently active.",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "StateChangeListener",
      "slug": "statechangelistener",
      "docs": "",
      "types": [
        {
          "text": "(state: ScreenReaderState): void",
          "complexTypes": [
            "ScreenReaderState"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}