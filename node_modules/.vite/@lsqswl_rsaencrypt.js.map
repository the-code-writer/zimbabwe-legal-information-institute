{
  "version": 3,
  "sources": ["../@lsqswl/rsaencrypt/lib/index.js", "../@lsqswl/rsaencrypt/index.js", "dep:@lsqswl_rsaencrypt"],
  "sourcesContent": ["\"use strict\";\n/**\n * index.js\n * Created by lsqswl on 2018/8/20.\n */\nexports.__esModule = true;\nvar jsencrypt_1 = require(\"jsencrypt\");\nvar b64map = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar b64pad = '=';\nfunction hex2b64(h) {\n    var i;\n    var c;\n    var ret = '';\n    for (i = 0; i + 3 <= h.length; i += 3) {\n        c = parseInt(h.substring(i, i + 3), 16);\n        ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\n    }\n    if (i + 1 === h.length) {\n        c = parseInt(h.substring(i, i + 1), 16);\n        ret += b64map.charAt(c << 2);\n    }\n    else if (i + 2 === h.length) {\n        c = parseInt(h.substring(i, i + 2), 16);\n        ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\n    }\n    while ((ret.length & 3) > 0) {\n        ret += b64pad;\n    }\n    return ret;\n}\nvar BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction b64tohex(s) {\n    var ret = '';\n    var i;\n    var k = 0; // b64 state, 0-3\n    var slop = 0;\n    for (i = 0; i < s.length; ++i) {\n        if (s.charAt(i) === b64pad) {\n            break;\n        }\n        var v = b64map.indexOf(s.charAt(i));\n        if (v < 0) {\n            continue;\n        }\n        if (k === 0) {\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 1;\n        }\n        else if (k === 1) {\n            ret += int2char((slop << 2) | (v >> 4));\n            slop = v & 0xf;\n            k = 2;\n        }\n        else if (k === 2) {\n            ret += int2char(slop);\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 3;\n        }\n        else {\n            ret += int2char((slop << 2) | (v >> 4));\n            ret += int2char(v & 0xf);\n            k = 0;\n        }\n    }\n    if (k === 1) {\n        ret += int2char(slop << 2);\n    }\n    return ret;\n}\n/**\n * rsa\u516C\u94A5\u52A0\u5BC6\u957F\u5B57\u7B26\u4E32\n * @param str\n * @param publicKey\n * @returns {any}\n */\nfunction encryptPublicLong(text, publicKey) {\n    var rsa = new jsencrypt_1[\"default\"]();\n    rsa.setPublicKey(publicKey);\n    var key = rsa.getKey();\n    var ct = \"\";\n    // RSA\u6BCF\u6B21\u52A0\u5BC6117bytes\uFF0C\u9700\u8981\u8F85\u52A9\u65B9\u6CD5\u5224\u65AD\u5B57\u7B26\u4E32\u622A\u53D6\u4F4D\u7F6E\n    // 1.\u83B7\u53D6\u5B57\u7B26\u4E32\u622A\u53D6\u70B9\n    var bytes = new Array();\n    bytes.push(0);\n    var byteNo = 0;\n    var len = text.length;\n    var c;\n    var temp = 0;\n    for (var i = 0; i < len; i++) {\n        c = text.charCodeAt(i);\n        if (c >= 0x010000 && c <= 0x10FFFF) { // \u7279\u6B8A\u5B57\u7B26\uFF0C\u5982\u0158\uFF0C\u0162\n            byteNo += 4;\n        }\n        else if (c >= 0x000800 && c <= 0x00FFFF) { // \u4E2D\u6587\u4EE5\u53CA\u6807\u70B9\u7B26\u53F7\n            byteNo += 3;\n        }\n        else if (c >= 0x000080 && c <= 0x0007FF) { // \u7279\u6B8A\u5B57\u7B26\uFF0C\u5982\u00C8\uFF0C\u00D2\n            byteNo += 2;\n        }\n        else { // \u82F1\u6587\u4EE5\u53CA\u6807\u70B9\u7B26\u53F7\n            byteNo += 1;\n        }\n        if ((byteNo % 117) >= 114 || (byteNo % 117) === 0) {\n            if (byteNo - temp >= 114) {\n                bytes.push(i);\n                temp = byteNo;\n            }\n        }\n    }\n    // 2.\u622A\u53D6\u5B57\u7B26\u4E32\u5E76\u5206\u6BB5\u52A0\u5BC6\n    if (bytes.length > 1) {\n        for (var i = 0; i < bytes.length - 1; i++) {\n            var str = void 0;\n            if (i === 0) {\n                str = text.substring(0, bytes[i + 1] + 1);\n            }\n            else {\n                str = text.substring(bytes[i] + 1, bytes[i + 1] + 1);\n            }\n            var t1 = key.encrypt(str);\n            ct += t1;\n        }\n        if (bytes[bytes.length - 1] !== text.length - 1) {\n            var lastStr = text.substring(bytes[bytes.length - 1] + 1);\n            ct += key.encrypt(lastStr);\n        }\n        return (hex2b64(ct));\n    }\n    var t = key.encrypt(text);\n    return hex2b64(t);\n}\nexports.encryptPublicLong = encryptPublicLong;\n/**\n * rsa\u79C1\u94A5\u89E3\u5BC6\u957F\u5B57\u7B26\u4E32\n * @param str\n * @param privateKey\n * @returns {any}\n */\nfunction decryptPrivateLong(text, privateKey) {\n    var rsa = new jsencrypt_1[\"default\"]();\n    rsa.setPrivateKey(privateKey);\n    var key = rsa.getKey();\n    text = b64tohex(text);\n    var maxLength = ((key.n.bitLength() + 7) >> 3);\n    try {\n        if (text.length > maxLength) {\n            var ct1_1 = \"\";\n            var lt = text.match(/.{1,256}/g);\n            if (lt) {\n                lt.forEach(function (entry) {\n                    var t1 = key.decrypt(entry);\n                    ct1_1 += t1;\n                });\n            }\n            return ct1_1;\n        }\n        var y = key.decrypt(text);\n        return y;\n    }\n    catch (ex) {\n        return false;\n    }\n}\nexports.decryptPrivateLong = decryptPrivateLong;\n", "module.exports=require('./lib')\n", "export default require(\"../node_modules/@lsqswl/rsaencrypt/index.js\");"],
  "mappings": "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",
  "names": []
}
